// Code generated by go-swagger; DO NOT EDIT.

package all

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/PatrickDelancy/semp-client/models"
)

// ReplaceClientCertAuthorityReader is a Reader for the ReplaceClientCertAuthority structure.
type ReplaceClientCertAuthorityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceClientCertAuthorityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplaceClientCertAuthorityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewReplaceClientCertAuthorityDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReplaceClientCertAuthorityOK creates a ReplaceClientCertAuthorityOK with default headers values
func NewReplaceClientCertAuthorityOK() *ReplaceClientCertAuthorityOK {
	return &ReplaceClientCertAuthorityOK{}
}

/* ReplaceClientCertAuthorityOK describes a response with status code 200, with default header values.

The Client Certificate Authority object's attributes after being replaced, and the request metadata.
*/
type ReplaceClientCertAuthorityOK struct {
	Payload *models.ClientCertAuthorityResponse
}

func (o *ReplaceClientCertAuthorityOK) Error() string {
	return fmt.Sprintf("[PUT /clientCertAuthorities/{certAuthorityName}][%d] replaceClientCertAuthorityOK  %+v", 200, o.Payload)
}
func (o *ReplaceClientCertAuthorityOK) GetPayload() *models.ClientCertAuthorityResponse {
	return o.Payload
}

func (o *ReplaceClientCertAuthorityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientCertAuthorityResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceClientCertAuthorityDefault creates a ReplaceClientCertAuthorityDefault with default headers values
func NewReplaceClientCertAuthorityDefault(code int) *ReplaceClientCertAuthorityDefault {
	return &ReplaceClientCertAuthorityDefault{
		_statusCode: code,
	}
}

/* ReplaceClientCertAuthorityDefault describes a response with status code -1, with default header values.

The error response.
*/
type ReplaceClientCertAuthorityDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the replace client cert authority default response
func (o *ReplaceClientCertAuthorityDefault) Code() int {
	return o._statusCode
}

func (o *ReplaceClientCertAuthorityDefault) Error() string {
	return fmt.Sprintf("[PUT /clientCertAuthorities/{certAuthorityName}][%d] replaceClientCertAuthority default  %+v", o._statusCode, o.Payload)
}
func (o *ReplaceClientCertAuthorityDefault) GetPayload() *models.SempMetaOnlyResponse {
	return o.Payload
}

func (o *ReplaceClientCertAuthorityDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
