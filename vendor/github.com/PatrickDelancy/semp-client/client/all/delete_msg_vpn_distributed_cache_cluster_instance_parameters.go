// Code generated by go-swagger; DO NOT EDIT.

package all

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteMsgVpnDistributedCacheClusterInstanceParams creates a new DeleteMsgVpnDistributedCacheClusterInstanceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteMsgVpnDistributedCacheClusterInstanceParams() *DeleteMsgVpnDistributedCacheClusterInstanceParams {
	return &DeleteMsgVpnDistributedCacheClusterInstanceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteMsgVpnDistributedCacheClusterInstanceParamsWithTimeout creates a new DeleteMsgVpnDistributedCacheClusterInstanceParams object
// with the ability to set a timeout on a request.
func NewDeleteMsgVpnDistributedCacheClusterInstanceParamsWithTimeout(timeout time.Duration) *DeleteMsgVpnDistributedCacheClusterInstanceParams {
	return &DeleteMsgVpnDistributedCacheClusterInstanceParams{
		timeout: timeout,
	}
}

// NewDeleteMsgVpnDistributedCacheClusterInstanceParamsWithContext creates a new DeleteMsgVpnDistributedCacheClusterInstanceParams object
// with the ability to set a context for a request.
func NewDeleteMsgVpnDistributedCacheClusterInstanceParamsWithContext(ctx context.Context) *DeleteMsgVpnDistributedCacheClusterInstanceParams {
	return &DeleteMsgVpnDistributedCacheClusterInstanceParams{
		Context: ctx,
	}
}

// NewDeleteMsgVpnDistributedCacheClusterInstanceParamsWithHTTPClient creates a new DeleteMsgVpnDistributedCacheClusterInstanceParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteMsgVpnDistributedCacheClusterInstanceParamsWithHTTPClient(client *http.Client) *DeleteMsgVpnDistributedCacheClusterInstanceParams {
	return &DeleteMsgVpnDistributedCacheClusterInstanceParams{
		HTTPClient: client,
	}
}

/* DeleteMsgVpnDistributedCacheClusterInstanceParams contains all the parameters to send to the API endpoint
   for the delete msg vpn distributed cache cluster instance operation.

   Typically these are written to a http.Request.
*/
type DeleteMsgVpnDistributedCacheClusterInstanceParams struct {

	/* CacheName.

	   The name of the Distributed Cache.
	*/
	CacheName string

	/* ClusterName.

	   The name of the Cache Cluster.
	*/
	ClusterName string

	/* InstanceName.

	   The name of the Cache Instance.
	*/
	InstanceName string

	/* MsgVpnName.

	   The name of the Message VPN.
	*/
	MsgVpnName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete msg vpn distributed cache cluster instance params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) WithDefaults() *DeleteMsgVpnDistributedCacheClusterInstanceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete msg vpn distributed cache cluster instance params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete msg vpn distributed cache cluster instance params
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) WithTimeout(timeout time.Duration) *DeleteMsgVpnDistributedCacheClusterInstanceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete msg vpn distributed cache cluster instance params
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete msg vpn distributed cache cluster instance params
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) WithContext(ctx context.Context) *DeleteMsgVpnDistributedCacheClusterInstanceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete msg vpn distributed cache cluster instance params
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete msg vpn distributed cache cluster instance params
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) WithHTTPClient(client *http.Client) *DeleteMsgVpnDistributedCacheClusterInstanceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete msg vpn distributed cache cluster instance params
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCacheName adds the cacheName to the delete msg vpn distributed cache cluster instance params
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) WithCacheName(cacheName string) *DeleteMsgVpnDistributedCacheClusterInstanceParams {
	o.SetCacheName(cacheName)
	return o
}

// SetCacheName adds the cacheName to the delete msg vpn distributed cache cluster instance params
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) SetCacheName(cacheName string) {
	o.CacheName = cacheName
}

// WithClusterName adds the clusterName to the delete msg vpn distributed cache cluster instance params
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) WithClusterName(clusterName string) *DeleteMsgVpnDistributedCacheClusterInstanceParams {
	o.SetClusterName(clusterName)
	return o
}

// SetClusterName adds the clusterName to the delete msg vpn distributed cache cluster instance params
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) SetClusterName(clusterName string) {
	o.ClusterName = clusterName
}

// WithInstanceName adds the instanceName to the delete msg vpn distributed cache cluster instance params
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) WithInstanceName(instanceName string) *DeleteMsgVpnDistributedCacheClusterInstanceParams {
	o.SetInstanceName(instanceName)
	return o
}

// SetInstanceName adds the instanceName to the delete msg vpn distributed cache cluster instance params
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) SetInstanceName(instanceName string) {
	o.InstanceName = instanceName
}

// WithMsgVpnName adds the msgVpnName to the delete msg vpn distributed cache cluster instance params
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) WithMsgVpnName(msgVpnName string) *DeleteMsgVpnDistributedCacheClusterInstanceParams {
	o.SetMsgVpnName(msgVpnName)
	return o
}

// SetMsgVpnName adds the msgVpnName to the delete msg vpn distributed cache cluster instance params
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) SetMsgVpnName(msgVpnName string) {
	o.MsgVpnName = msgVpnName
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteMsgVpnDistributedCacheClusterInstanceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cacheName
	if err := r.SetPathParam("cacheName", o.CacheName); err != nil {
		return err
	}

	// path param clusterName
	if err := r.SetPathParam("clusterName", o.ClusterName); err != nil {
		return err
	}

	// path param instanceName
	if err := r.SetPathParam("instanceName", o.InstanceName); err != nil {
		return err
	}

	// path param msgVpnName
	if err := r.SetPathParam("msgVpnName", o.MsgVpnName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
