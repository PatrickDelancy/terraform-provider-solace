// Code generated by go-swagger; DO NOT EDIT.

package all

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/PatrickDelancy/semp-client/models"
)

// GetClientCertAuthorityOcspTLSTrustedCommonNameReader is a Reader for the GetClientCertAuthorityOcspTLSTrustedCommonName structure.
type GetClientCertAuthorityOcspTLSTrustedCommonNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClientCertAuthorityOcspTLSTrustedCommonNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetClientCertAuthorityOcspTLSTrustedCommonNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetClientCertAuthorityOcspTLSTrustedCommonNameOK creates a GetClientCertAuthorityOcspTLSTrustedCommonNameOK with default headers values
func NewGetClientCertAuthorityOcspTLSTrustedCommonNameOK() *GetClientCertAuthorityOcspTLSTrustedCommonNameOK {
	return &GetClientCertAuthorityOcspTLSTrustedCommonNameOK{}
}

/* GetClientCertAuthorityOcspTLSTrustedCommonNameOK describes a response with status code 200, with default header values.

The OCSP Responder Trusted Common Name object's attributes, and the request metadata.
*/
type GetClientCertAuthorityOcspTLSTrustedCommonNameOK struct {
	Payload *models.ClientCertAuthorityOcspTLSTrustedCommonNameResponse
}

func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameOK) Error() string {
	return fmt.Sprintf("[GET /clientCertAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames/{ocspTlsTrustedCommonName}][%d] getClientCertAuthorityOcspTlsTrustedCommonNameOK  %+v", 200, o.Payload)
}
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameOK) GetPayload() *models.ClientCertAuthorityOcspTLSTrustedCommonNameResponse {
	return o.Payload
}

func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientCertAuthorityOcspTLSTrustedCommonNameResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClientCertAuthorityOcspTLSTrustedCommonNameDefault creates a GetClientCertAuthorityOcspTLSTrustedCommonNameDefault with default headers values
func NewGetClientCertAuthorityOcspTLSTrustedCommonNameDefault(code int) *GetClientCertAuthorityOcspTLSTrustedCommonNameDefault {
	return &GetClientCertAuthorityOcspTLSTrustedCommonNameDefault{
		_statusCode: code,
	}
}

/* GetClientCertAuthorityOcspTLSTrustedCommonNameDefault describes a response with status code -1, with default header values.

The error response.
*/
type GetClientCertAuthorityOcspTLSTrustedCommonNameDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the get client cert authority ocsp Tls trusted common name default response
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameDefault) Code() int {
	return o._statusCode
}

func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameDefault) Error() string {
	return fmt.Sprintf("[GET /clientCertAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames/{ocspTlsTrustedCommonName}][%d] getClientCertAuthorityOcspTlsTrustedCommonName default  %+v", o._statusCode, o.Payload)
}
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameDefault) GetPayload() *models.SempMetaOnlyResponse {
	return o.Payload
}

func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
