// Code generated by go-swagger; DO NOT EDIT.

package all

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteMsgVpnACLProfilePublishTopicExceptionParams creates a new DeleteMsgVpnACLProfilePublishTopicExceptionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteMsgVpnACLProfilePublishTopicExceptionParams() *DeleteMsgVpnACLProfilePublishTopicExceptionParams {
	return &DeleteMsgVpnACLProfilePublishTopicExceptionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteMsgVpnACLProfilePublishTopicExceptionParamsWithTimeout creates a new DeleteMsgVpnACLProfilePublishTopicExceptionParams object
// with the ability to set a timeout on a request.
func NewDeleteMsgVpnACLProfilePublishTopicExceptionParamsWithTimeout(timeout time.Duration) *DeleteMsgVpnACLProfilePublishTopicExceptionParams {
	return &DeleteMsgVpnACLProfilePublishTopicExceptionParams{
		timeout: timeout,
	}
}

// NewDeleteMsgVpnACLProfilePublishTopicExceptionParamsWithContext creates a new DeleteMsgVpnACLProfilePublishTopicExceptionParams object
// with the ability to set a context for a request.
func NewDeleteMsgVpnACLProfilePublishTopicExceptionParamsWithContext(ctx context.Context) *DeleteMsgVpnACLProfilePublishTopicExceptionParams {
	return &DeleteMsgVpnACLProfilePublishTopicExceptionParams{
		Context: ctx,
	}
}

// NewDeleteMsgVpnACLProfilePublishTopicExceptionParamsWithHTTPClient creates a new DeleteMsgVpnACLProfilePublishTopicExceptionParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteMsgVpnACLProfilePublishTopicExceptionParamsWithHTTPClient(client *http.Client) *DeleteMsgVpnACLProfilePublishTopicExceptionParams {
	return &DeleteMsgVpnACLProfilePublishTopicExceptionParams{
		HTTPClient: client,
	}
}

/* DeleteMsgVpnACLProfilePublishTopicExceptionParams contains all the parameters to send to the API endpoint
   for the delete msg vpn Acl profile publish topic exception operation.

   Typically these are written to a http.Request.
*/
type DeleteMsgVpnACLProfilePublishTopicExceptionParams struct {

	/* ACLProfileName.

	   The name of the ACL Profile.
	*/
	ACLProfileName string

	/* MsgVpnName.

	   The name of the Message VPN.
	*/
	MsgVpnName string

	/* PublishTopicException.

	   The topic for the exception to the default action taken. May include wildcard characters.
	*/
	PublishTopicException string

	/* PublishTopicExceptionSyntax.

	   The syntax of the topic for the exception to the default action taken.
	*/
	PublishTopicExceptionSyntax string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete msg vpn Acl profile publish topic exception params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) WithDefaults() *DeleteMsgVpnACLProfilePublishTopicExceptionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete msg vpn Acl profile publish topic exception params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete msg vpn Acl profile publish topic exception params
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) WithTimeout(timeout time.Duration) *DeleteMsgVpnACLProfilePublishTopicExceptionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete msg vpn Acl profile publish topic exception params
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete msg vpn Acl profile publish topic exception params
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) WithContext(ctx context.Context) *DeleteMsgVpnACLProfilePublishTopicExceptionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete msg vpn Acl profile publish topic exception params
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete msg vpn Acl profile publish topic exception params
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) WithHTTPClient(client *http.Client) *DeleteMsgVpnACLProfilePublishTopicExceptionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete msg vpn Acl profile publish topic exception params
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithACLProfileName adds the aCLProfileName to the delete msg vpn Acl profile publish topic exception params
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) WithACLProfileName(aCLProfileName string) *DeleteMsgVpnACLProfilePublishTopicExceptionParams {
	o.SetACLProfileName(aCLProfileName)
	return o
}

// SetACLProfileName adds the aclProfileName to the delete msg vpn Acl profile publish topic exception params
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) SetACLProfileName(aCLProfileName string) {
	o.ACLProfileName = aCLProfileName
}

// WithMsgVpnName adds the msgVpnName to the delete msg vpn Acl profile publish topic exception params
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) WithMsgVpnName(msgVpnName string) *DeleteMsgVpnACLProfilePublishTopicExceptionParams {
	o.SetMsgVpnName(msgVpnName)
	return o
}

// SetMsgVpnName adds the msgVpnName to the delete msg vpn Acl profile publish topic exception params
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) SetMsgVpnName(msgVpnName string) {
	o.MsgVpnName = msgVpnName
}

// WithPublishTopicException adds the publishTopicException to the delete msg vpn Acl profile publish topic exception params
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) WithPublishTopicException(publishTopicException string) *DeleteMsgVpnACLProfilePublishTopicExceptionParams {
	o.SetPublishTopicException(publishTopicException)
	return o
}

// SetPublishTopicException adds the publishTopicException to the delete msg vpn Acl profile publish topic exception params
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) SetPublishTopicException(publishTopicException string) {
	o.PublishTopicException = publishTopicException
}

// WithPublishTopicExceptionSyntax adds the publishTopicExceptionSyntax to the delete msg vpn Acl profile publish topic exception params
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) WithPublishTopicExceptionSyntax(publishTopicExceptionSyntax string) *DeleteMsgVpnACLProfilePublishTopicExceptionParams {
	o.SetPublishTopicExceptionSyntax(publishTopicExceptionSyntax)
	return o
}

// SetPublishTopicExceptionSyntax adds the publishTopicExceptionSyntax to the delete msg vpn Acl profile publish topic exception params
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) SetPublishTopicExceptionSyntax(publishTopicExceptionSyntax string) {
	o.PublishTopicExceptionSyntax = publishTopicExceptionSyntax
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteMsgVpnACLProfilePublishTopicExceptionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param aclProfileName
	if err := r.SetPathParam("aclProfileName", o.ACLProfileName); err != nil {
		return err
	}

	// path param msgVpnName
	if err := r.SetPathParam("msgVpnName", o.MsgVpnName); err != nil {
		return err
	}

	// path param publishTopicException
	if err := r.SetPathParam("publishTopicException", o.PublishTopicException); err != nil {
		return err
	}

	// path param publishTopicExceptionSyntax
	if err := r.SetPathParam("publishTopicExceptionSyntax", o.PublishTopicExceptionSyntax); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
