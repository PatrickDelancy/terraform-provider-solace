// Code generated by go-swagger; DO NOT EDIT.

package all

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/PatrickDelancy/semp-client/models"
)

// ReplaceCertAuthorityReader is a Reader for the ReplaceCertAuthority structure.
type ReplaceCertAuthorityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceCertAuthorityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplaceCertAuthorityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewReplaceCertAuthorityDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReplaceCertAuthorityOK creates a ReplaceCertAuthorityOK with default headers values
func NewReplaceCertAuthorityOK() *ReplaceCertAuthorityOK {
	return &ReplaceCertAuthorityOK{}
}

/* ReplaceCertAuthorityOK describes a response with status code 200, with default header values.

The Certificate Authority object's attributes after being replaced, and the request metadata.
*/
type ReplaceCertAuthorityOK struct {
	Payload *models.CertAuthorityResponse
}

func (o *ReplaceCertAuthorityOK) Error() string {
	return fmt.Sprintf("[PUT /certAuthorities/{certAuthorityName}][%d] replaceCertAuthorityOK  %+v", 200, o.Payload)
}
func (o *ReplaceCertAuthorityOK) GetPayload() *models.CertAuthorityResponse {
	return o.Payload
}

func (o *ReplaceCertAuthorityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CertAuthorityResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceCertAuthorityDefault creates a ReplaceCertAuthorityDefault with default headers values
func NewReplaceCertAuthorityDefault(code int) *ReplaceCertAuthorityDefault {
	return &ReplaceCertAuthorityDefault{
		_statusCode: code,
	}
}

/* ReplaceCertAuthorityDefault describes a response with status code -1, with default header values.

The error response.
*/
type ReplaceCertAuthorityDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the replace cert authority default response
func (o *ReplaceCertAuthorityDefault) Code() int {
	return o._statusCode
}

func (o *ReplaceCertAuthorityDefault) Error() string {
	return fmt.Sprintf("[PUT /certAuthorities/{certAuthorityName}][%d] replaceCertAuthority default  %+v", o._statusCode, o.Payload)
}
func (o *ReplaceCertAuthorityDefault) GetPayload() *models.SempMetaOnlyResponse {
	return o.Payload
}

func (o *ReplaceCertAuthorityDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
