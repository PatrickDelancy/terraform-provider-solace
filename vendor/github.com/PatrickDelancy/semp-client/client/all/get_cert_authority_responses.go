// Code generated by go-swagger; DO NOT EDIT.

package all

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/PatrickDelancy/semp-client/models"
)

// GetCertAuthorityReader is a Reader for the GetCertAuthority structure.
type GetCertAuthorityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCertAuthorityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCertAuthorityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetCertAuthorityDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCertAuthorityOK creates a GetCertAuthorityOK with default headers values
func NewGetCertAuthorityOK() *GetCertAuthorityOK {
	return &GetCertAuthorityOK{}
}

/* GetCertAuthorityOK describes a response with status code 200, with default header values.

The Certificate Authority object's attributes, and the request metadata.
*/
type GetCertAuthorityOK struct {
	Payload *models.CertAuthorityResponse
}

func (o *GetCertAuthorityOK) Error() string {
	return fmt.Sprintf("[GET /certAuthorities/{certAuthorityName}][%d] getCertAuthorityOK  %+v", 200, o.Payload)
}
func (o *GetCertAuthorityOK) GetPayload() *models.CertAuthorityResponse {
	return o.Payload
}

func (o *GetCertAuthorityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CertAuthorityResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertAuthorityDefault creates a GetCertAuthorityDefault with default headers values
func NewGetCertAuthorityDefault(code int) *GetCertAuthorityDefault {
	return &GetCertAuthorityDefault{
		_statusCode: code,
	}
}

/* GetCertAuthorityDefault describes a response with status code -1, with default header values.

The error response.
*/
type GetCertAuthorityDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the get cert authority default response
func (o *GetCertAuthorityDefault) Code() int {
	return o._statusCode
}

func (o *GetCertAuthorityDefault) Error() string {
	return fmt.Sprintf("[GET /certAuthorities/{certAuthorityName}][%d] getCertAuthority default  %+v", o._statusCode, o.Payload)
}
func (o *GetCertAuthorityDefault) GetPayload() *models.SempMetaOnlyResponse {
	return o.Payload
}

func (o *GetCertAuthorityDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
