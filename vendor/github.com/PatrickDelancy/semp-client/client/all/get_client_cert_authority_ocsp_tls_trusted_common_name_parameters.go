// Code generated by go-swagger; DO NOT EDIT.

package all

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetClientCertAuthorityOcspTLSTrustedCommonNameParams creates a new GetClientCertAuthorityOcspTLSTrustedCommonNameParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetClientCertAuthorityOcspTLSTrustedCommonNameParams() *GetClientCertAuthorityOcspTLSTrustedCommonNameParams {
	return &GetClientCertAuthorityOcspTLSTrustedCommonNameParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetClientCertAuthorityOcspTLSTrustedCommonNameParamsWithTimeout creates a new GetClientCertAuthorityOcspTLSTrustedCommonNameParams object
// with the ability to set a timeout on a request.
func NewGetClientCertAuthorityOcspTLSTrustedCommonNameParamsWithTimeout(timeout time.Duration) *GetClientCertAuthorityOcspTLSTrustedCommonNameParams {
	return &GetClientCertAuthorityOcspTLSTrustedCommonNameParams{
		timeout: timeout,
	}
}

// NewGetClientCertAuthorityOcspTLSTrustedCommonNameParamsWithContext creates a new GetClientCertAuthorityOcspTLSTrustedCommonNameParams object
// with the ability to set a context for a request.
func NewGetClientCertAuthorityOcspTLSTrustedCommonNameParamsWithContext(ctx context.Context) *GetClientCertAuthorityOcspTLSTrustedCommonNameParams {
	return &GetClientCertAuthorityOcspTLSTrustedCommonNameParams{
		Context: ctx,
	}
}

// NewGetClientCertAuthorityOcspTLSTrustedCommonNameParamsWithHTTPClient creates a new GetClientCertAuthorityOcspTLSTrustedCommonNameParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetClientCertAuthorityOcspTLSTrustedCommonNameParamsWithHTTPClient(client *http.Client) *GetClientCertAuthorityOcspTLSTrustedCommonNameParams {
	return &GetClientCertAuthorityOcspTLSTrustedCommonNameParams{
		HTTPClient: client,
	}
}

/* GetClientCertAuthorityOcspTLSTrustedCommonNameParams contains all the parameters to send to the API endpoint
   for the get client cert authority ocsp Tls trusted common name operation.

   Typically these are written to a http.Request.
*/
type GetClientCertAuthorityOcspTLSTrustedCommonNameParams struct {

	/* CertAuthorityName.

	   The name of the Certificate Authority.
	*/
	CertAuthorityName string

	/* OcspTLSTrustedCommonName.

	   The expected Trusted Common Name of the OCSP responder remote certificate.
	*/
	OcspTLSTrustedCommonName string

	/* OpaquePassword.

	   Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See that documentation for the `opaquePassword` parameter.
	*/
	OpaquePassword *string

	/* Select.

	   Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
	*/
	Select []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get client cert authority ocsp Tls trusted common name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) WithDefaults() *GetClientCertAuthorityOcspTLSTrustedCommonNameParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get client cert authority ocsp Tls trusted common name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get client cert authority ocsp Tls trusted common name params
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) WithTimeout(timeout time.Duration) *GetClientCertAuthorityOcspTLSTrustedCommonNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get client cert authority ocsp Tls trusted common name params
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get client cert authority ocsp Tls trusted common name params
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) WithContext(ctx context.Context) *GetClientCertAuthorityOcspTLSTrustedCommonNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get client cert authority ocsp Tls trusted common name params
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get client cert authority ocsp Tls trusted common name params
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) WithHTTPClient(client *http.Client) *GetClientCertAuthorityOcspTLSTrustedCommonNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get client cert authority ocsp Tls trusted common name params
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCertAuthorityName adds the certAuthorityName to the get client cert authority ocsp Tls trusted common name params
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) WithCertAuthorityName(certAuthorityName string) *GetClientCertAuthorityOcspTLSTrustedCommonNameParams {
	o.SetCertAuthorityName(certAuthorityName)
	return o
}

// SetCertAuthorityName adds the certAuthorityName to the get client cert authority ocsp Tls trusted common name params
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) SetCertAuthorityName(certAuthorityName string) {
	o.CertAuthorityName = certAuthorityName
}

// WithOcspTLSTrustedCommonName adds the ocspTLSTrustedCommonName to the get client cert authority ocsp Tls trusted common name params
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) WithOcspTLSTrustedCommonName(ocspTLSTrustedCommonName string) *GetClientCertAuthorityOcspTLSTrustedCommonNameParams {
	o.SetOcspTLSTrustedCommonName(ocspTLSTrustedCommonName)
	return o
}

// SetOcspTLSTrustedCommonName adds the ocspTlsTrustedCommonName to the get client cert authority ocsp Tls trusted common name params
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) SetOcspTLSTrustedCommonName(ocspTLSTrustedCommonName string) {
	o.OcspTLSTrustedCommonName = ocspTLSTrustedCommonName
}

// WithOpaquePassword adds the opaquePassword to the get client cert authority ocsp Tls trusted common name params
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) WithOpaquePassword(opaquePassword *string) *GetClientCertAuthorityOcspTLSTrustedCommonNameParams {
	o.SetOpaquePassword(opaquePassword)
	return o
}

// SetOpaquePassword adds the opaquePassword to the get client cert authority ocsp Tls trusted common name params
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) SetOpaquePassword(opaquePassword *string) {
	o.OpaquePassword = opaquePassword
}

// WithSelect adds the selectVar to the get client cert authority ocsp Tls trusted common name params
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) WithSelect(selectVar []string) *GetClientCertAuthorityOcspTLSTrustedCommonNameParams {
	o.SetSelect(selectVar)
	return o
}

// SetSelect adds the select to the get client cert authority ocsp Tls trusted common name params
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) SetSelect(selectVar []string) {
	o.Select = selectVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param certAuthorityName
	if err := r.SetPathParam("certAuthorityName", o.CertAuthorityName); err != nil {
		return err
	}

	// path param ocspTlsTrustedCommonName
	if err := r.SetPathParam("ocspTlsTrustedCommonName", o.OcspTLSTrustedCommonName); err != nil {
		return err
	}

	if o.OpaquePassword != nil {

		// query param opaquePassword
		var qrOpaquePassword string

		if o.OpaquePassword != nil {
			qrOpaquePassword = *o.OpaquePassword
		}
		qOpaquePassword := qrOpaquePassword
		if qOpaquePassword != "" {

			if err := r.SetQueryParam("opaquePassword", qOpaquePassword); err != nil {
				return err
			}
		}
	}

	if o.Select != nil {

		// binding items for select
		joinedSelect := o.bindParamSelect(reg)

		// query array param select
		if err := r.SetQueryParam("select", joinedSelect...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetClientCertAuthorityOcspTLSTrustedCommonName binds the parameter select
func (o *GetClientCertAuthorityOcspTLSTrustedCommonNameParams) bindParamSelect(formats strfmt.Registry) []string {
	selectIR := o.Select

	var selectIC []string
	for _, selectIIR := range selectIR { // explode []string

		selectIIV := selectIIR // string as string
		selectIC = append(selectIC, selectIIV)
	}

	// items.CollectionFormat: "csv"
	selectIS := swag.JoinByFormat(selectIC, "csv")

	return selectIS
}
