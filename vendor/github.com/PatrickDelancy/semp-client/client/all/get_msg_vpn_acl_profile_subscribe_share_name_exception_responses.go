// Code generated by go-swagger; DO NOT EDIT.

package all

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/PatrickDelancy/semp-client/models"
)

// GetMsgVpnACLProfileSubscribeShareNameExceptionReader is a Reader for the GetMsgVpnACLProfileSubscribeShareNameException structure.
type GetMsgVpnACLProfileSubscribeShareNameExceptionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMsgVpnACLProfileSubscribeShareNameExceptionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMsgVpnACLProfileSubscribeShareNameExceptionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetMsgVpnACLProfileSubscribeShareNameExceptionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMsgVpnACLProfileSubscribeShareNameExceptionOK creates a GetMsgVpnACLProfileSubscribeShareNameExceptionOK with default headers values
func NewGetMsgVpnACLProfileSubscribeShareNameExceptionOK() *GetMsgVpnACLProfileSubscribeShareNameExceptionOK {
	return &GetMsgVpnACLProfileSubscribeShareNameExceptionOK{}
}

/* GetMsgVpnACLProfileSubscribeShareNameExceptionOK describes a response with status code 200, with default header values.

The Subscribe Share Name Exception object's attributes, and the request metadata.
*/
type GetMsgVpnACLProfileSubscribeShareNameExceptionOK struct {
	Payload *models.MsgVpnACLProfileSubscribeShareNameExceptionResponse
}

func (o *GetMsgVpnACLProfileSubscribeShareNameExceptionOK) Error() string {
	return fmt.Sprintf("[GET /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeShareNameExceptions/{subscribeShareNameExceptionSyntax},{subscribeShareNameException}][%d] getMsgVpnAclProfileSubscribeShareNameExceptionOK  %+v", 200, o.Payload)
}
func (o *GetMsgVpnACLProfileSubscribeShareNameExceptionOK) GetPayload() *models.MsgVpnACLProfileSubscribeShareNameExceptionResponse {
	return o.Payload
}

func (o *GetMsgVpnACLProfileSubscribeShareNameExceptionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MsgVpnACLProfileSubscribeShareNameExceptionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMsgVpnACLProfileSubscribeShareNameExceptionDefault creates a GetMsgVpnACLProfileSubscribeShareNameExceptionDefault with default headers values
func NewGetMsgVpnACLProfileSubscribeShareNameExceptionDefault(code int) *GetMsgVpnACLProfileSubscribeShareNameExceptionDefault {
	return &GetMsgVpnACLProfileSubscribeShareNameExceptionDefault{
		_statusCode: code,
	}
}

/* GetMsgVpnACLProfileSubscribeShareNameExceptionDefault describes a response with status code -1, with default header values.

The error response.
*/
type GetMsgVpnACLProfileSubscribeShareNameExceptionDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the get msg vpn Acl profile subscribe share name exception default response
func (o *GetMsgVpnACLProfileSubscribeShareNameExceptionDefault) Code() int {
	return o._statusCode
}

func (o *GetMsgVpnACLProfileSubscribeShareNameExceptionDefault) Error() string {
	return fmt.Sprintf("[GET /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeShareNameExceptions/{subscribeShareNameExceptionSyntax},{subscribeShareNameException}][%d] getMsgVpnAclProfileSubscribeShareNameException default  %+v", o._statusCode, o.Payload)
}
func (o *GetMsgVpnACLProfileSubscribeShareNameExceptionDefault) GetPayload() *models.SempMetaOnlyResponse {
	return o.Payload
}

func (o *GetMsgVpnACLProfileSubscribeShareNameExceptionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
