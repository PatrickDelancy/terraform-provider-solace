// Code generated by go-swagger; DO NOT EDIT.

package all

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteMsgVpnSequencedTopicParams creates a new DeleteMsgVpnSequencedTopicParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteMsgVpnSequencedTopicParams() *DeleteMsgVpnSequencedTopicParams {
	return &DeleteMsgVpnSequencedTopicParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteMsgVpnSequencedTopicParamsWithTimeout creates a new DeleteMsgVpnSequencedTopicParams object
// with the ability to set a timeout on a request.
func NewDeleteMsgVpnSequencedTopicParamsWithTimeout(timeout time.Duration) *DeleteMsgVpnSequencedTopicParams {
	return &DeleteMsgVpnSequencedTopicParams{
		timeout: timeout,
	}
}

// NewDeleteMsgVpnSequencedTopicParamsWithContext creates a new DeleteMsgVpnSequencedTopicParams object
// with the ability to set a context for a request.
func NewDeleteMsgVpnSequencedTopicParamsWithContext(ctx context.Context) *DeleteMsgVpnSequencedTopicParams {
	return &DeleteMsgVpnSequencedTopicParams{
		Context: ctx,
	}
}

// NewDeleteMsgVpnSequencedTopicParamsWithHTTPClient creates a new DeleteMsgVpnSequencedTopicParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteMsgVpnSequencedTopicParamsWithHTTPClient(client *http.Client) *DeleteMsgVpnSequencedTopicParams {
	return &DeleteMsgVpnSequencedTopicParams{
		HTTPClient: client,
	}
}

/* DeleteMsgVpnSequencedTopicParams contains all the parameters to send to the API endpoint
   for the delete msg vpn sequenced topic operation.

   Typically these are written to a http.Request.
*/
type DeleteMsgVpnSequencedTopicParams struct {

	/* MsgVpnName.

	   The name of the Message VPN.
	*/
	MsgVpnName string

	/* SequencedTopic.

	   Topic for applying sequence numbers.
	*/
	SequencedTopic string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete msg vpn sequenced topic params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteMsgVpnSequencedTopicParams) WithDefaults() *DeleteMsgVpnSequencedTopicParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete msg vpn sequenced topic params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteMsgVpnSequencedTopicParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete msg vpn sequenced topic params
func (o *DeleteMsgVpnSequencedTopicParams) WithTimeout(timeout time.Duration) *DeleteMsgVpnSequencedTopicParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete msg vpn sequenced topic params
func (o *DeleteMsgVpnSequencedTopicParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete msg vpn sequenced topic params
func (o *DeleteMsgVpnSequencedTopicParams) WithContext(ctx context.Context) *DeleteMsgVpnSequencedTopicParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete msg vpn sequenced topic params
func (o *DeleteMsgVpnSequencedTopicParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete msg vpn sequenced topic params
func (o *DeleteMsgVpnSequencedTopicParams) WithHTTPClient(client *http.Client) *DeleteMsgVpnSequencedTopicParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete msg vpn sequenced topic params
func (o *DeleteMsgVpnSequencedTopicParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMsgVpnName adds the msgVpnName to the delete msg vpn sequenced topic params
func (o *DeleteMsgVpnSequencedTopicParams) WithMsgVpnName(msgVpnName string) *DeleteMsgVpnSequencedTopicParams {
	o.SetMsgVpnName(msgVpnName)
	return o
}

// SetMsgVpnName adds the msgVpnName to the delete msg vpn sequenced topic params
func (o *DeleteMsgVpnSequencedTopicParams) SetMsgVpnName(msgVpnName string) {
	o.MsgVpnName = msgVpnName
}

// WithSequencedTopic adds the sequencedTopic to the delete msg vpn sequenced topic params
func (o *DeleteMsgVpnSequencedTopicParams) WithSequencedTopic(sequencedTopic string) *DeleteMsgVpnSequencedTopicParams {
	o.SetSequencedTopic(sequencedTopic)
	return o
}

// SetSequencedTopic adds the sequencedTopic to the delete msg vpn sequenced topic params
func (o *DeleteMsgVpnSequencedTopicParams) SetSequencedTopic(sequencedTopic string) {
	o.SequencedTopic = sequencedTopic
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteMsgVpnSequencedTopicParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param msgVpnName
	if err := r.SetPathParam("msgVpnName", o.MsgVpnName); err != nil {
		return err
	}

	// path param sequencedTopic
	if err := r.SetPathParam("sequencedTopic", o.SequencedTopic); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
