// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MsgVpnACLProfileSubscribeShareNameException msg vpn Acl profile subscribe share name exception
//
// swagger:model MsgVpnAclProfileSubscribeShareNameException
type MsgVpnACLProfileSubscribeShareNameException struct {

	// The name of the ACL Profile.
	ACLProfileName string `json:"aclProfileName,omitempty"`

	// The name of the Message VPN.
	MsgVpnName string `json:"msgVpnName,omitempty"`

	// The subscribe share name exception to the default action taken. May include wildcard characters.
	SubscribeShareNameException string `json:"subscribeShareNameException,omitempty"`

	// The syntax of the subscribe share name for the exception to the default action taken. The allowed values and their meaning are:
	//
	// <pre>
	// "smf" - Topic uses SMF syntax.
	// "mqtt" - Topic uses MQTT syntax.
	// </pre>
	//
	// Enum: [smf mqtt]
	SubscribeShareNameExceptionSyntax string `json:"subscribeShareNameExceptionSyntax,omitempty"`
}

// Validate validates this msg vpn Acl profile subscribe share name exception
func (m *MsgVpnACLProfileSubscribeShareNameException) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSubscribeShareNameExceptionSyntax(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var msgVpnAclProfileSubscribeShareNameExceptionTypeSubscribeShareNameExceptionSyntaxPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["smf","mqtt"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		msgVpnAclProfileSubscribeShareNameExceptionTypeSubscribeShareNameExceptionSyntaxPropEnum = append(msgVpnAclProfileSubscribeShareNameExceptionTypeSubscribeShareNameExceptionSyntaxPropEnum, v)
	}
}

const (

	// MsgVpnACLProfileSubscribeShareNameExceptionSubscribeShareNameExceptionSyntaxSmf captures enum value "smf"
	MsgVpnACLProfileSubscribeShareNameExceptionSubscribeShareNameExceptionSyntaxSmf string = "smf"

	// MsgVpnACLProfileSubscribeShareNameExceptionSubscribeShareNameExceptionSyntaxMqtt captures enum value "mqtt"
	MsgVpnACLProfileSubscribeShareNameExceptionSubscribeShareNameExceptionSyntaxMqtt string = "mqtt"
)

// prop value enum
func (m *MsgVpnACLProfileSubscribeShareNameException) validateSubscribeShareNameExceptionSyntaxEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, msgVpnAclProfileSubscribeShareNameExceptionTypeSubscribeShareNameExceptionSyntaxPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *MsgVpnACLProfileSubscribeShareNameException) validateSubscribeShareNameExceptionSyntax(formats strfmt.Registry) error {
	if swag.IsZero(m.SubscribeShareNameExceptionSyntax) { // not required
		return nil
	}

	// value enum
	if err := m.validateSubscribeShareNameExceptionSyntaxEnum("subscribeShareNameExceptionSyntax", "body", m.SubscribeShareNameExceptionSyntax); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this msg vpn Acl profile subscribe share name exception based on context it is used
func (m *MsgVpnACLProfileSubscribeShareNameException) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MsgVpnACLProfileSubscribeShareNameException) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MsgVpnACLProfileSubscribeShareNameException) UnmarshalBinary(b []byte) error {
	var res MsgVpnACLProfileSubscribeShareNameException
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
